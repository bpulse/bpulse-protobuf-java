// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: HistogramQuantitiesMessageRS.proto

package me.bpulse.domain.proto.histogram;

public final class HistogramQuantitiesMessageRS {
  private HistogramQuantitiesMessageRS() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface IntervalOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 gte = 1;
    /**
     * <code>required int32 gte = 1;</code>
     */
    boolean hasGte();
    /**
     * <code>required int32 gte = 1;</code>
     */
    int getGte();

    // required int32 lt = 2;
    /**
     * <code>required int32 lt = 2;</code>
     */
    boolean hasLt();
    /**
     * <code>required int32 lt = 2;</code>
     */
    int getLt();
  }
  /**
   * Protobuf type {@code histogram.Interval}
   */
  public static final class Interval extends
      com.google.protobuf.GeneratedMessage
      implements IntervalOrBuilder {
    // Use Interval.newBuilder() to construct.
    private Interval(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Interval(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Interval defaultInstance;
    public static Interval getDefaultInstance() {
      return defaultInstance;
    }

    public Interval getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Interval(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              gte_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              lt_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_Interval_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_Interval_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval.class, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval.Builder.class);
    }

    public static com.google.protobuf.Parser<Interval> PARSER =
        new com.google.protobuf.AbstractParser<Interval>() {
      public Interval parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Interval(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Interval> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 gte = 1;
    public static final int GTE_FIELD_NUMBER = 1;
    private int gte_;
    /**
     * <code>required int32 gte = 1;</code>
     */
    public boolean hasGte() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 gte = 1;</code>
     */
    public int getGte() {
      return gte_;
    }

    // required int32 lt = 2;
    public static final int LT_FIELD_NUMBER = 2;
    private int lt_;
    /**
     * <code>required int32 lt = 2;</code>
     */
    public boolean hasLt() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 lt = 2;</code>
     */
    public int getLt() {
      return lt_;
    }

    private void initFields() {
      gte_ = 0;
      lt_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasGte()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLt()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, gte_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, lt_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, gte_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, lt_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code histogram.Interval}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.IntervalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_Interval_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_Interval_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval.class, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval.Builder.class);
      }

      // Construct using me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gte_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        lt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_Interval_descriptor;
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval getDefaultInstanceForType() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval.getDefaultInstance();
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval build() {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval buildPartial() {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval result = new me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gte_ = gte_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lt_ = lt_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval) {
          return mergeFrom((me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval other) {
        if (other == me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval.getDefaultInstance()) return this;
        if (other.hasGte()) {
          setGte(other.getGte());
        }
        if (other.hasLt()) {
          setLt(other.getLt());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasGte()) {
          
          return false;
        }
        if (!hasLt()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 gte = 1;
      private int gte_ ;
      /**
       * <code>required int32 gte = 1;</code>
       */
      public boolean hasGte() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 gte = 1;</code>
       */
      public int getGte() {
        return gte_;
      }
      /**
       * <code>required int32 gte = 1;</code>
       */
      public Builder setGte(int value) {
        bitField0_ |= 0x00000001;
        gte_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 gte = 1;</code>
       */
      public Builder clearGte() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gte_ = 0;
        onChanged();
        return this;
      }

      // required int32 lt = 2;
      private int lt_ ;
      /**
       * <code>required int32 lt = 2;</code>
       */
      public boolean hasLt() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 lt = 2;</code>
       */
      public int getLt() {
        return lt_;
      }
      /**
       * <code>required int32 lt = 2;</code>
       */
      public Builder setLt(int value) {
        bitField0_ |= 0x00000002;
        lt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 lt = 2;</code>
       */
      public Builder clearLt() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lt_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:histogram.Interval)
    }

    static {
      defaultInstance = new Interval(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:histogram.Interval)
  }

  public interface QuantitySecondOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 s = 1;
    /**
     * <code>required int32 s = 1;</code>
     */
    boolean hasS();
    /**
     * <code>required int32 s = 1;</code>
     */
    int getS();

    // required int64 q = 2;
    /**
     * <code>required int64 q = 2;</code>
     */
    boolean hasQ();
    /**
     * <code>required int64 q = 2;</code>
     */
    long getQ();

    // required float PCT = 3;
    /**
     * <code>required float PCT = 3;</code>
     */
    boolean hasPCT();
    /**
     * <code>required float PCT = 3;</code>
     */
    float getPCT();
  }
  /**
   * Protobuf type {@code histogram.QuantitySecond}
   */
  public static final class QuantitySecond extends
      com.google.protobuf.GeneratedMessage
      implements QuantitySecondOrBuilder {
    // Use QuantitySecond.newBuilder() to construct.
    private QuantitySecond(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private QuantitySecond(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final QuantitySecond defaultInstance;
    public static QuantitySecond getDefaultInstance() {
      return defaultInstance;
    }

    public QuantitySecond getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private QuantitySecond(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              s_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              q_ = input.readInt64();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              pCT_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantitySecond_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantitySecond_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond.class, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond.Builder.class);
    }

    public static com.google.protobuf.Parser<QuantitySecond> PARSER =
        new com.google.protobuf.AbstractParser<QuantitySecond>() {
      public QuantitySecond parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new QuantitySecond(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<QuantitySecond> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 s = 1;
    public static final int S_FIELD_NUMBER = 1;
    private int s_;
    /**
     * <code>required int32 s = 1;</code>
     */
    public boolean hasS() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 s = 1;</code>
     */
    public int getS() {
      return s_;
    }

    // required int64 q = 2;
    public static final int Q_FIELD_NUMBER = 2;
    private long q_;
    /**
     * <code>required int64 q = 2;</code>
     */
    public boolean hasQ() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 q = 2;</code>
     */
    public long getQ() {
      return q_;
    }

    // required float PCT = 3;
    public static final int PCT_FIELD_NUMBER = 3;
    private float pCT_;
    /**
     * <code>required float PCT = 3;</code>
     */
    public boolean hasPCT() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float PCT = 3;</code>
     */
    public float getPCT() {
      return pCT_;
    }

    private void initFields() {
      s_ = 0;
      q_ = 0L;
      pCT_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQ()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPCT()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, s_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, q_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, pCT_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, s_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, q_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, pCT_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code histogram.QuantitySecond}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecondOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantitySecond_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantitySecond_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond.class, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond.Builder.class);
      }

      // Construct using me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        s_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        q_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        pCT_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantitySecond_descriptor;
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond getDefaultInstanceForType() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond.getDefaultInstance();
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond build() {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond buildPartial() {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond result = new me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.s_ = s_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.q_ = q_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pCT_ = pCT_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond) {
          return mergeFrom((me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond other) {
        if (other == me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond.getDefaultInstance()) return this;
        if (other.hasS()) {
          setS(other.getS());
        }
        if (other.hasQ()) {
          setQ(other.getQ());
        }
        if (other.hasPCT()) {
          setPCT(other.getPCT());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasS()) {
          
          return false;
        }
        if (!hasQ()) {
          
          return false;
        }
        if (!hasPCT()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 s = 1;
      private int s_ ;
      /**
       * <code>required int32 s = 1;</code>
       */
      public boolean hasS() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 s = 1;</code>
       */
      public int getS() {
        return s_;
      }
      /**
       * <code>required int32 s = 1;</code>
       */
      public Builder setS(int value) {
        bitField0_ |= 0x00000001;
        s_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 s = 1;</code>
       */
      public Builder clearS() {
        bitField0_ = (bitField0_ & ~0x00000001);
        s_ = 0;
        onChanged();
        return this;
      }

      // required int64 q = 2;
      private long q_ ;
      /**
       * <code>required int64 q = 2;</code>
       */
      public boolean hasQ() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 q = 2;</code>
       */
      public long getQ() {
        return q_;
      }
      /**
       * <code>required int64 q = 2;</code>
       */
      public Builder setQ(long value) {
        bitField0_ |= 0x00000002;
        q_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 q = 2;</code>
       */
      public Builder clearQ() {
        bitField0_ = (bitField0_ & ~0x00000002);
        q_ = 0L;
        onChanged();
        return this;
      }

      // required float PCT = 3;
      private float pCT_ ;
      /**
       * <code>required float PCT = 3;</code>
       */
      public boolean hasPCT() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float PCT = 3;</code>
       */
      public float getPCT() {
        return pCT_;
      }
      /**
       * <code>required float PCT = 3;</code>
       */
      public Builder setPCT(float value) {
        bitField0_ |= 0x00000004;
        pCT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float PCT = 3;</code>
       */
      public Builder clearPCT() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pCT_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:histogram.QuantitySecond)
    }

    static {
      defaultInstance = new QuantitySecond(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:histogram.QuantitySecond)
  }

  public interface QuantityMinuteOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 mi = 1;
    /**
     * <code>required int32 mi = 1;</code>
     */
    boolean hasMi();
    /**
     * <code>required int32 mi = 1;</code>
     */
    int getMi();

    // required int64 q = 2;
    /**
     * <code>required int64 q = 2;</code>
     */
    boolean hasQ();
    /**
     * <code>required int64 q = 2;</code>
     */
    long getQ();

    // required float PCT = 3;
    /**
     * <code>required float PCT = 3;</code>
     */
    boolean hasPCT();
    /**
     * <code>required float PCT = 3;</code>
     */
    float getPCT();

    // repeated .histogram.QuantitySecond sc = 4;
    /**
     * <code>repeated .histogram.QuantitySecond sc = 4;</code>
     */
    java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond> 
        getScList();
    /**
     * <code>repeated .histogram.QuantitySecond sc = 4;</code>
     */
    me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond getSc(int index);
    /**
     * <code>repeated .histogram.QuantitySecond sc = 4;</code>
     */
    int getScCount();
    /**
     * <code>repeated .histogram.QuantitySecond sc = 4;</code>
     */
    java.util.List<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecondOrBuilder> 
        getScOrBuilderList();
    /**
     * <code>repeated .histogram.QuantitySecond sc = 4;</code>
     */
    me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecondOrBuilder getScOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code histogram.QuantityMinute}
   */
  public static final class QuantityMinute extends
      com.google.protobuf.GeneratedMessage
      implements QuantityMinuteOrBuilder {
    // Use QuantityMinute.newBuilder() to construct.
    private QuantityMinute(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private QuantityMinute(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final QuantityMinute defaultInstance;
    public static QuantityMinute getDefaultInstance() {
      return defaultInstance;
    }

    public QuantityMinute getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private QuantityMinute(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              mi_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              q_ = input.readInt64();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              pCT_ = input.readFloat();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                sc_ = new java.util.ArrayList<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond>();
                mutable_bitField0_ |= 0x00000008;
              }
              sc_.add(input.readMessage(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          sc_ = java.util.Collections.unmodifiableList(sc_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityMinute_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityMinute_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute.class, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute.Builder.class);
    }

    public static com.google.protobuf.Parser<QuantityMinute> PARSER =
        new com.google.protobuf.AbstractParser<QuantityMinute>() {
      public QuantityMinute parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new QuantityMinute(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<QuantityMinute> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 mi = 1;
    public static final int MI_FIELD_NUMBER = 1;
    private int mi_;
    /**
     * <code>required int32 mi = 1;</code>
     */
    public boolean hasMi() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 mi = 1;</code>
     */
    public int getMi() {
      return mi_;
    }

    // required int64 q = 2;
    public static final int Q_FIELD_NUMBER = 2;
    private long q_;
    /**
     * <code>required int64 q = 2;</code>
     */
    public boolean hasQ() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 q = 2;</code>
     */
    public long getQ() {
      return q_;
    }

    // required float PCT = 3;
    public static final int PCT_FIELD_NUMBER = 3;
    private float pCT_;
    /**
     * <code>required float PCT = 3;</code>
     */
    public boolean hasPCT() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float PCT = 3;</code>
     */
    public float getPCT() {
      return pCT_;
    }

    // repeated .histogram.QuantitySecond sc = 4;
    public static final int SC_FIELD_NUMBER = 4;
    private java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond> sc_;
    /**
     * <code>repeated .histogram.QuantitySecond sc = 4;</code>
     */
    public java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond> getScList() {
      return sc_;
    }
    /**
     * <code>repeated .histogram.QuantitySecond sc = 4;</code>
     */
    public java.util.List<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecondOrBuilder> 
        getScOrBuilderList() {
      return sc_;
    }
    /**
     * <code>repeated .histogram.QuantitySecond sc = 4;</code>
     */
    public int getScCount() {
      return sc_.size();
    }
    /**
     * <code>repeated .histogram.QuantitySecond sc = 4;</code>
     */
    public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond getSc(int index) {
      return sc_.get(index);
    }
    /**
     * <code>repeated .histogram.QuantitySecond sc = 4;</code>
     */
    public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecondOrBuilder getScOrBuilder(
        int index) {
      return sc_.get(index);
    }

    private void initFields() {
      mi_ = 0;
      q_ = 0L;
      pCT_ = 0F;
      sc_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMi()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQ()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPCT()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getScCount(); i++) {
        if (!getSc(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, mi_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, q_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, pCT_);
      }
      for (int i = 0; i < sc_.size(); i++) {
        output.writeMessage(4, sc_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mi_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, q_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, pCT_);
      }
      for (int i = 0; i < sc_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, sc_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code histogram.QuantityMinute}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinuteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityMinute_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityMinute_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute.class, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute.Builder.class);
      }

      // Construct using me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getScFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mi_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        q_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        pCT_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (scBuilder_ == null) {
          sc_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          scBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityMinute_descriptor;
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute getDefaultInstanceForType() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute.getDefaultInstance();
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute build() {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute buildPartial() {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute result = new me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mi_ = mi_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.q_ = q_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pCT_ = pCT_;
        if (scBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            sc_ = java.util.Collections.unmodifiableList(sc_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.sc_ = sc_;
        } else {
          result.sc_ = scBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute) {
          return mergeFrom((me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute other) {
        if (other == me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute.getDefaultInstance()) return this;
        if (other.hasMi()) {
          setMi(other.getMi());
        }
        if (other.hasQ()) {
          setQ(other.getQ());
        }
        if (other.hasPCT()) {
          setPCT(other.getPCT());
        }
        if (scBuilder_ == null) {
          if (!other.sc_.isEmpty()) {
            if (sc_.isEmpty()) {
              sc_ = other.sc_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureScIsMutable();
              sc_.addAll(other.sc_);
            }
            onChanged();
          }
        } else {
          if (!other.sc_.isEmpty()) {
            if (scBuilder_.isEmpty()) {
              scBuilder_.dispose();
              scBuilder_ = null;
              sc_ = other.sc_;
              bitField0_ = (bitField0_ & ~0x00000008);
              scBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getScFieldBuilder() : null;
            } else {
              scBuilder_.addAllMessages(other.sc_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMi()) {
          
          return false;
        }
        if (!hasQ()) {
          
          return false;
        }
        if (!hasPCT()) {
          
          return false;
        }
        for (int i = 0; i < getScCount(); i++) {
          if (!getSc(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 mi = 1;
      private int mi_ ;
      /**
       * <code>required int32 mi = 1;</code>
       */
      public boolean hasMi() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 mi = 1;</code>
       */
      public int getMi() {
        return mi_;
      }
      /**
       * <code>required int32 mi = 1;</code>
       */
      public Builder setMi(int value) {
        bitField0_ |= 0x00000001;
        mi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mi = 1;</code>
       */
      public Builder clearMi() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mi_ = 0;
        onChanged();
        return this;
      }

      // required int64 q = 2;
      private long q_ ;
      /**
       * <code>required int64 q = 2;</code>
       */
      public boolean hasQ() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 q = 2;</code>
       */
      public long getQ() {
        return q_;
      }
      /**
       * <code>required int64 q = 2;</code>
       */
      public Builder setQ(long value) {
        bitField0_ |= 0x00000002;
        q_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 q = 2;</code>
       */
      public Builder clearQ() {
        bitField0_ = (bitField0_ & ~0x00000002);
        q_ = 0L;
        onChanged();
        return this;
      }

      // required float PCT = 3;
      private float pCT_ ;
      /**
       * <code>required float PCT = 3;</code>
       */
      public boolean hasPCT() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float PCT = 3;</code>
       */
      public float getPCT() {
        return pCT_;
      }
      /**
       * <code>required float PCT = 3;</code>
       */
      public Builder setPCT(float value) {
        bitField0_ |= 0x00000004;
        pCT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float PCT = 3;</code>
       */
      public Builder clearPCT() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pCT_ = 0F;
        onChanged();
        return this;
      }

      // repeated .histogram.QuantitySecond sc = 4;
      private java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond> sc_ =
        java.util.Collections.emptyList();
      private void ensureScIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          sc_ = new java.util.ArrayList<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond>(sc_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecondOrBuilder> scBuilder_;

      /**
       * <code>repeated .histogram.QuantitySecond sc = 4;</code>
       */
      public java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond> getScList() {
        if (scBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sc_);
        } else {
          return scBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .histogram.QuantitySecond sc = 4;</code>
       */
      public int getScCount() {
        if (scBuilder_ == null) {
          return sc_.size();
        } else {
          return scBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .histogram.QuantitySecond sc = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond getSc(int index) {
        if (scBuilder_ == null) {
          return sc_.get(index);
        } else {
          return scBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .histogram.QuantitySecond sc = 4;</code>
       */
      public Builder setSc(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond value) {
        if (scBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScIsMutable();
          sc_.set(index, value);
          onChanged();
        } else {
          scBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantitySecond sc = 4;</code>
       */
      public Builder setSc(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond.Builder builderForValue) {
        if (scBuilder_ == null) {
          ensureScIsMutable();
          sc_.set(index, builderForValue.build());
          onChanged();
        } else {
          scBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantitySecond sc = 4;</code>
       */
      public Builder addSc(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond value) {
        if (scBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScIsMutable();
          sc_.add(value);
          onChanged();
        } else {
          scBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantitySecond sc = 4;</code>
       */
      public Builder addSc(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond value) {
        if (scBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScIsMutable();
          sc_.add(index, value);
          onChanged();
        } else {
          scBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantitySecond sc = 4;</code>
       */
      public Builder addSc(
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond.Builder builderForValue) {
        if (scBuilder_ == null) {
          ensureScIsMutable();
          sc_.add(builderForValue.build());
          onChanged();
        } else {
          scBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantitySecond sc = 4;</code>
       */
      public Builder addSc(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond.Builder builderForValue) {
        if (scBuilder_ == null) {
          ensureScIsMutable();
          sc_.add(index, builderForValue.build());
          onChanged();
        } else {
          scBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantitySecond sc = 4;</code>
       */
      public Builder addAllSc(
          java.lang.Iterable<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond> values) {
        if (scBuilder_ == null) {
          ensureScIsMutable();
          super.addAll(values, sc_);
          onChanged();
        } else {
          scBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantitySecond sc = 4;</code>
       */
      public Builder clearSc() {
        if (scBuilder_ == null) {
          sc_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          scBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantitySecond sc = 4;</code>
       */
      public Builder removeSc(int index) {
        if (scBuilder_ == null) {
          ensureScIsMutable();
          sc_.remove(index);
          onChanged();
        } else {
          scBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantitySecond sc = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond.Builder getScBuilder(
          int index) {
        return getScFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .histogram.QuantitySecond sc = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecondOrBuilder getScOrBuilder(
          int index) {
        if (scBuilder_ == null) {
          return sc_.get(index);  } else {
          return scBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .histogram.QuantitySecond sc = 4;</code>
       */
      public java.util.List<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecondOrBuilder> 
           getScOrBuilderList() {
        if (scBuilder_ != null) {
          return scBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sc_);
        }
      }
      /**
       * <code>repeated .histogram.QuantitySecond sc = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond.Builder addScBuilder() {
        return getScFieldBuilder().addBuilder(
            me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond.getDefaultInstance());
      }
      /**
       * <code>repeated .histogram.QuantitySecond sc = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond.Builder addScBuilder(
          int index) {
        return getScFieldBuilder().addBuilder(
            index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond.getDefaultInstance());
      }
      /**
       * <code>repeated .histogram.QuantitySecond sc = 4;</code>
       */
      public java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond.Builder> 
           getScBuilderList() {
        return getScFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecondOrBuilder> 
          getScFieldBuilder() {
        if (scBuilder_ == null) {
          scBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecond.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitySecondOrBuilder>(
                  sc_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          sc_ = null;
        }
        return scBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:histogram.QuantityMinute)
    }

    static {
      defaultInstance = new QuantityMinute(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:histogram.QuantityMinute)
  }

  public interface QuantityHourOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 h = 1;
    /**
     * <code>required int32 h = 1;</code>
     */
    boolean hasH();
    /**
     * <code>required int32 h = 1;</code>
     */
    int getH();

    // required int64 q = 2;
    /**
     * <code>required int64 q = 2;</code>
     */
    boolean hasQ();
    /**
     * <code>required int64 q = 2;</code>
     */
    long getQ();

    // required float PCT = 3;
    /**
     * <code>required float PCT = 3;</code>
     */
    boolean hasPCT();
    /**
     * <code>required float PCT = 3;</code>
     */
    float getPCT();

    // repeated .histogram.QuantityMinute mts = 4;
    /**
     * <code>repeated .histogram.QuantityMinute mts = 4;</code>
     */
    java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute> 
        getMtsList();
    /**
     * <code>repeated .histogram.QuantityMinute mts = 4;</code>
     */
    me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute getMts(int index);
    /**
     * <code>repeated .histogram.QuantityMinute mts = 4;</code>
     */
    int getMtsCount();
    /**
     * <code>repeated .histogram.QuantityMinute mts = 4;</code>
     */
    java.util.List<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinuteOrBuilder> 
        getMtsOrBuilderList();
    /**
     * <code>repeated .histogram.QuantityMinute mts = 4;</code>
     */
    me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinuteOrBuilder getMtsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code histogram.QuantityHour}
   */
  public static final class QuantityHour extends
      com.google.protobuf.GeneratedMessage
      implements QuantityHourOrBuilder {
    // Use QuantityHour.newBuilder() to construct.
    private QuantityHour(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private QuantityHour(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final QuantityHour defaultInstance;
    public static QuantityHour getDefaultInstance() {
      return defaultInstance;
    }

    public QuantityHour getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private QuantityHour(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              h_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              q_ = input.readInt64();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              pCT_ = input.readFloat();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                mts_ = new java.util.ArrayList<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute>();
                mutable_bitField0_ |= 0x00000008;
              }
              mts_.add(input.readMessage(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          mts_ = java.util.Collections.unmodifiableList(mts_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityHour_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityHour_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour.class, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour.Builder.class);
    }

    public static com.google.protobuf.Parser<QuantityHour> PARSER =
        new com.google.protobuf.AbstractParser<QuantityHour>() {
      public QuantityHour parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new QuantityHour(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<QuantityHour> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 h = 1;
    public static final int H_FIELD_NUMBER = 1;
    private int h_;
    /**
     * <code>required int32 h = 1;</code>
     */
    public boolean hasH() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 h = 1;</code>
     */
    public int getH() {
      return h_;
    }

    // required int64 q = 2;
    public static final int Q_FIELD_NUMBER = 2;
    private long q_;
    /**
     * <code>required int64 q = 2;</code>
     */
    public boolean hasQ() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 q = 2;</code>
     */
    public long getQ() {
      return q_;
    }

    // required float PCT = 3;
    public static final int PCT_FIELD_NUMBER = 3;
    private float pCT_;
    /**
     * <code>required float PCT = 3;</code>
     */
    public boolean hasPCT() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float PCT = 3;</code>
     */
    public float getPCT() {
      return pCT_;
    }

    // repeated .histogram.QuantityMinute mts = 4;
    public static final int MTS_FIELD_NUMBER = 4;
    private java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute> mts_;
    /**
     * <code>repeated .histogram.QuantityMinute mts = 4;</code>
     */
    public java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute> getMtsList() {
      return mts_;
    }
    /**
     * <code>repeated .histogram.QuantityMinute mts = 4;</code>
     */
    public java.util.List<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinuteOrBuilder> 
        getMtsOrBuilderList() {
      return mts_;
    }
    /**
     * <code>repeated .histogram.QuantityMinute mts = 4;</code>
     */
    public int getMtsCount() {
      return mts_.size();
    }
    /**
     * <code>repeated .histogram.QuantityMinute mts = 4;</code>
     */
    public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute getMts(int index) {
      return mts_.get(index);
    }
    /**
     * <code>repeated .histogram.QuantityMinute mts = 4;</code>
     */
    public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinuteOrBuilder getMtsOrBuilder(
        int index) {
      return mts_.get(index);
    }

    private void initFields() {
      h_ = 0;
      q_ = 0L;
      pCT_ = 0F;
      mts_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasH()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQ()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPCT()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getMtsCount(); i++) {
        if (!getMts(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, h_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, q_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, pCT_);
      }
      for (int i = 0; i < mts_.size(); i++) {
        output.writeMessage(4, mts_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, h_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, q_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, pCT_);
      }
      for (int i = 0; i < mts_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, mts_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code histogram.QuantityHour}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHourOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityHour_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityHour_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour.class, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour.Builder.class);
      }

      // Construct using me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMtsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        h_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        q_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        pCT_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (mtsBuilder_ == null) {
          mts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          mtsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityHour_descriptor;
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour getDefaultInstanceForType() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour.getDefaultInstance();
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour build() {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour buildPartial() {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour result = new me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.h_ = h_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.q_ = q_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pCT_ = pCT_;
        if (mtsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            mts_ = java.util.Collections.unmodifiableList(mts_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.mts_ = mts_;
        } else {
          result.mts_ = mtsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour) {
          return mergeFrom((me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour other) {
        if (other == me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour.getDefaultInstance()) return this;
        if (other.hasH()) {
          setH(other.getH());
        }
        if (other.hasQ()) {
          setQ(other.getQ());
        }
        if (other.hasPCT()) {
          setPCT(other.getPCT());
        }
        if (mtsBuilder_ == null) {
          if (!other.mts_.isEmpty()) {
            if (mts_.isEmpty()) {
              mts_ = other.mts_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureMtsIsMutable();
              mts_.addAll(other.mts_);
            }
            onChanged();
          }
        } else {
          if (!other.mts_.isEmpty()) {
            if (mtsBuilder_.isEmpty()) {
              mtsBuilder_.dispose();
              mtsBuilder_ = null;
              mts_ = other.mts_;
              bitField0_ = (bitField0_ & ~0x00000008);
              mtsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMtsFieldBuilder() : null;
            } else {
              mtsBuilder_.addAllMessages(other.mts_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasH()) {
          
          return false;
        }
        if (!hasQ()) {
          
          return false;
        }
        if (!hasPCT()) {
          
          return false;
        }
        for (int i = 0; i < getMtsCount(); i++) {
          if (!getMts(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 h = 1;
      private int h_ ;
      /**
       * <code>required int32 h = 1;</code>
       */
      public boolean hasH() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 h = 1;</code>
       */
      public int getH() {
        return h_;
      }
      /**
       * <code>required int32 h = 1;</code>
       */
      public Builder setH(int value) {
        bitField0_ |= 0x00000001;
        h_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 h = 1;</code>
       */
      public Builder clearH() {
        bitField0_ = (bitField0_ & ~0x00000001);
        h_ = 0;
        onChanged();
        return this;
      }

      // required int64 q = 2;
      private long q_ ;
      /**
       * <code>required int64 q = 2;</code>
       */
      public boolean hasQ() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 q = 2;</code>
       */
      public long getQ() {
        return q_;
      }
      /**
       * <code>required int64 q = 2;</code>
       */
      public Builder setQ(long value) {
        bitField0_ |= 0x00000002;
        q_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 q = 2;</code>
       */
      public Builder clearQ() {
        bitField0_ = (bitField0_ & ~0x00000002);
        q_ = 0L;
        onChanged();
        return this;
      }

      // required float PCT = 3;
      private float pCT_ ;
      /**
       * <code>required float PCT = 3;</code>
       */
      public boolean hasPCT() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float PCT = 3;</code>
       */
      public float getPCT() {
        return pCT_;
      }
      /**
       * <code>required float PCT = 3;</code>
       */
      public Builder setPCT(float value) {
        bitField0_ |= 0x00000004;
        pCT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float PCT = 3;</code>
       */
      public Builder clearPCT() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pCT_ = 0F;
        onChanged();
        return this;
      }

      // repeated .histogram.QuantityMinute mts = 4;
      private java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute> mts_ =
        java.util.Collections.emptyList();
      private void ensureMtsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          mts_ = new java.util.ArrayList<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute>(mts_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinuteOrBuilder> mtsBuilder_;

      /**
       * <code>repeated .histogram.QuantityMinute mts = 4;</code>
       */
      public java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute> getMtsList() {
        if (mtsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mts_);
        } else {
          return mtsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .histogram.QuantityMinute mts = 4;</code>
       */
      public int getMtsCount() {
        if (mtsBuilder_ == null) {
          return mts_.size();
        } else {
          return mtsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .histogram.QuantityMinute mts = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute getMts(int index) {
        if (mtsBuilder_ == null) {
          return mts_.get(index);
        } else {
          return mtsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .histogram.QuantityMinute mts = 4;</code>
       */
      public Builder setMts(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute value) {
        if (mtsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMtsIsMutable();
          mts_.set(index, value);
          onChanged();
        } else {
          mtsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityMinute mts = 4;</code>
       */
      public Builder setMts(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute.Builder builderForValue) {
        if (mtsBuilder_ == null) {
          ensureMtsIsMutable();
          mts_.set(index, builderForValue.build());
          onChanged();
        } else {
          mtsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityMinute mts = 4;</code>
       */
      public Builder addMts(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute value) {
        if (mtsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMtsIsMutable();
          mts_.add(value);
          onChanged();
        } else {
          mtsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityMinute mts = 4;</code>
       */
      public Builder addMts(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute value) {
        if (mtsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMtsIsMutable();
          mts_.add(index, value);
          onChanged();
        } else {
          mtsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityMinute mts = 4;</code>
       */
      public Builder addMts(
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute.Builder builderForValue) {
        if (mtsBuilder_ == null) {
          ensureMtsIsMutable();
          mts_.add(builderForValue.build());
          onChanged();
        } else {
          mtsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityMinute mts = 4;</code>
       */
      public Builder addMts(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute.Builder builderForValue) {
        if (mtsBuilder_ == null) {
          ensureMtsIsMutable();
          mts_.add(index, builderForValue.build());
          onChanged();
        } else {
          mtsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityMinute mts = 4;</code>
       */
      public Builder addAllMts(
          java.lang.Iterable<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute> values) {
        if (mtsBuilder_ == null) {
          ensureMtsIsMutable();
          super.addAll(values, mts_);
          onChanged();
        } else {
          mtsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityMinute mts = 4;</code>
       */
      public Builder clearMts() {
        if (mtsBuilder_ == null) {
          mts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          mtsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityMinute mts = 4;</code>
       */
      public Builder removeMts(int index) {
        if (mtsBuilder_ == null) {
          ensureMtsIsMutable();
          mts_.remove(index);
          onChanged();
        } else {
          mtsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityMinute mts = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute.Builder getMtsBuilder(
          int index) {
        return getMtsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .histogram.QuantityMinute mts = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinuteOrBuilder getMtsOrBuilder(
          int index) {
        if (mtsBuilder_ == null) {
          return mts_.get(index);  } else {
          return mtsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .histogram.QuantityMinute mts = 4;</code>
       */
      public java.util.List<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinuteOrBuilder> 
           getMtsOrBuilderList() {
        if (mtsBuilder_ != null) {
          return mtsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mts_);
        }
      }
      /**
       * <code>repeated .histogram.QuantityMinute mts = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute.Builder addMtsBuilder() {
        return getMtsFieldBuilder().addBuilder(
            me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute.getDefaultInstance());
      }
      /**
       * <code>repeated .histogram.QuantityMinute mts = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute.Builder addMtsBuilder(
          int index) {
        return getMtsFieldBuilder().addBuilder(
            index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute.getDefaultInstance());
      }
      /**
       * <code>repeated .histogram.QuantityMinute mts = 4;</code>
       */
      public java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute.Builder> 
           getMtsBuilderList() {
        return getMtsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinuteOrBuilder> 
          getMtsFieldBuilder() {
        if (mtsBuilder_ == null) {
          mtsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinute.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMinuteOrBuilder>(
                  mts_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          mts_ = null;
        }
        return mtsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:histogram.QuantityHour)
    }

    static {
      defaultInstance = new QuantityHour(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:histogram.QuantityHour)
  }

  public interface QuantityDayOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 d = 1;
    /**
     * <code>required int32 d = 1;</code>
     */
    boolean hasD();
    /**
     * <code>required int32 d = 1;</code>
     */
    int getD();

    // required int64 q = 2;
    /**
     * <code>required int64 q = 2;</code>
     */
    boolean hasQ();
    /**
     * <code>required int64 q = 2;</code>
     */
    long getQ();

    // required float PCT = 3;
    /**
     * <code>required float PCT = 3;</code>
     */
    boolean hasPCT();
    /**
     * <code>required float PCT = 3;</code>
     */
    float getPCT();

    // repeated .histogram.QuantityHour hs = 4;
    /**
     * <code>repeated .histogram.QuantityHour hs = 4;</code>
     */
    java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour> 
        getHsList();
    /**
     * <code>repeated .histogram.QuantityHour hs = 4;</code>
     */
    me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour getHs(int index);
    /**
     * <code>repeated .histogram.QuantityHour hs = 4;</code>
     */
    int getHsCount();
    /**
     * <code>repeated .histogram.QuantityHour hs = 4;</code>
     */
    java.util.List<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHourOrBuilder> 
        getHsOrBuilderList();
    /**
     * <code>repeated .histogram.QuantityHour hs = 4;</code>
     */
    me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHourOrBuilder getHsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code histogram.QuantityDay}
   */
  public static final class QuantityDay extends
      com.google.protobuf.GeneratedMessage
      implements QuantityDayOrBuilder {
    // Use QuantityDay.newBuilder() to construct.
    private QuantityDay(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private QuantityDay(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final QuantityDay defaultInstance;
    public static QuantityDay getDefaultInstance() {
      return defaultInstance;
    }

    public QuantityDay getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private QuantityDay(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              d_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              q_ = input.readInt64();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              pCT_ = input.readFloat();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                hs_ = new java.util.ArrayList<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour>();
                mutable_bitField0_ |= 0x00000008;
              }
              hs_.add(input.readMessage(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          hs_ = java.util.Collections.unmodifiableList(hs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityDay_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityDay_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay.class, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay.Builder.class);
    }

    public static com.google.protobuf.Parser<QuantityDay> PARSER =
        new com.google.protobuf.AbstractParser<QuantityDay>() {
      public QuantityDay parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new QuantityDay(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<QuantityDay> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 d = 1;
    public static final int D_FIELD_NUMBER = 1;
    private int d_;
    /**
     * <code>required int32 d = 1;</code>
     */
    public boolean hasD() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 d = 1;</code>
     */
    public int getD() {
      return d_;
    }

    // required int64 q = 2;
    public static final int Q_FIELD_NUMBER = 2;
    private long q_;
    /**
     * <code>required int64 q = 2;</code>
     */
    public boolean hasQ() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 q = 2;</code>
     */
    public long getQ() {
      return q_;
    }

    // required float PCT = 3;
    public static final int PCT_FIELD_NUMBER = 3;
    private float pCT_;
    /**
     * <code>required float PCT = 3;</code>
     */
    public boolean hasPCT() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float PCT = 3;</code>
     */
    public float getPCT() {
      return pCT_;
    }

    // repeated .histogram.QuantityHour hs = 4;
    public static final int HS_FIELD_NUMBER = 4;
    private java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour> hs_;
    /**
     * <code>repeated .histogram.QuantityHour hs = 4;</code>
     */
    public java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour> getHsList() {
      return hs_;
    }
    /**
     * <code>repeated .histogram.QuantityHour hs = 4;</code>
     */
    public java.util.List<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHourOrBuilder> 
        getHsOrBuilderList() {
      return hs_;
    }
    /**
     * <code>repeated .histogram.QuantityHour hs = 4;</code>
     */
    public int getHsCount() {
      return hs_.size();
    }
    /**
     * <code>repeated .histogram.QuantityHour hs = 4;</code>
     */
    public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour getHs(int index) {
      return hs_.get(index);
    }
    /**
     * <code>repeated .histogram.QuantityHour hs = 4;</code>
     */
    public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHourOrBuilder getHsOrBuilder(
        int index) {
      return hs_.get(index);
    }

    private void initFields() {
      d_ = 0;
      q_ = 0L;
      pCT_ = 0F;
      hs_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasD()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQ()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPCT()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getHsCount(); i++) {
        if (!getHs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, d_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, q_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, pCT_);
      }
      for (int i = 0; i < hs_.size(); i++) {
        output.writeMessage(4, hs_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, d_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, q_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, pCT_);
      }
      for (int i = 0; i < hs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, hs_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code histogram.QuantityDay}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityDay_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityDay_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay.class, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay.Builder.class);
      }

      // Construct using me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        d_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        q_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        pCT_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (hsBuilder_ == null) {
          hs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          hsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityDay_descriptor;
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay getDefaultInstanceForType() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay.getDefaultInstance();
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay build() {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay buildPartial() {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay result = new me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.d_ = d_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.q_ = q_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pCT_ = pCT_;
        if (hsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            hs_ = java.util.Collections.unmodifiableList(hs_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.hs_ = hs_;
        } else {
          result.hs_ = hsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay) {
          return mergeFrom((me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay other) {
        if (other == me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay.getDefaultInstance()) return this;
        if (other.hasD()) {
          setD(other.getD());
        }
        if (other.hasQ()) {
          setQ(other.getQ());
        }
        if (other.hasPCT()) {
          setPCT(other.getPCT());
        }
        if (hsBuilder_ == null) {
          if (!other.hs_.isEmpty()) {
            if (hs_.isEmpty()) {
              hs_ = other.hs_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureHsIsMutable();
              hs_.addAll(other.hs_);
            }
            onChanged();
          }
        } else {
          if (!other.hs_.isEmpty()) {
            if (hsBuilder_.isEmpty()) {
              hsBuilder_.dispose();
              hsBuilder_ = null;
              hs_ = other.hs_;
              bitField0_ = (bitField0_ & ~0x00000008);
              hsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHsFieldBuilder() : null;
            } else {
              hsBuilder_.addAllMessages(other.hs_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasD()) {
          
          return false;
        }
        if (!hasQ()) {
          
          return false;
        }
        if (!hasPCT()) {
          
          return false;
        }
        for (int i = 0; i < getHsCount(); i++) {
          if (!getHs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 d = 1;
      private int d_ ;
      /**
       * <code>required int32 d = 1;</code>
       */
      public boolean hasD() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 d = 1;</code>
       */
      public int getD() {
        return d_;
      }
      /**
       * <code>required int32 d = 1;</code>
       */
      public Builder setD(int value) {
        bitField0_ |= 0x00000001;
        d_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 d = 1;</code>
       */
      public Builder clearD() {
        bitField0_ = (bitField0_ & ~0x00000001);
        d_ = 0;
        onChanged();
        return this;
      }

      // required int64 q = 2;
      private long q_ ;
      /**
       * <code>required int64 q = 2;</code>
       */
      public boolean hasQ() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 q = 2;</code>
       */
      public long getQ() {
        return q_;
      }
      /**
       * <code>required int64 q = 2;</code>
       */
      public Builder setQ(long value) {
        bitField0_ |= 0x00000002;
        q_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 q = 2;</code>
       */
      public Builder clearQ() {
        bitField0_ = (bitField0_ & ~0x00000002);
        q_ = 0L;
        onChanged();
        return this;
      }

      // required float PCT = 3;
      private float pCT_ ;
      /**
       * <code>required float PCT = 3;</code>
       */
      public boolean hasPCT() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float PCT = 3;</code>
       */
      public float getPCT() {
        return pCT_;
      }
      /**
       * <code>required float PCT = 3;</code>
       */
      public Builder setPCT(float value) {
        bitField0_ |= 0x00000004;
        pCT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float PCT = 3;</code>
       */
      public Builder clearPCT() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pCT_ = 0F;
        onChanged();
        return this;
      }

      // repeated .histogram.QuantityHour hs = 4;
      private java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour> hs_ =
        java.util.Collections.emptyList();
      private void ensureHsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          hs_ = new java.util.ArrayList<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour>(hs_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHourOrBuilder> hsBuilder_;

      /**
       * <code>repeated .histogram.QuantityHour hs = 4;</code>
       */
      public java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour> getHsList() {
        if (hsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(hs_);
        } else {
          return hsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .histogram.QuantityHour hs = 4;</code>
       */
      public int getHsCount() {
        if (hsBuilder_ == null) {
          return hs_.size();
        } else {
          return hsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .histogram.QuantityHour hs = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour getHs(int index) {
        if (hsBuilder_ == null) {
          return hs_.get(index);
        } else {
          return hsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .histogram.QuantityHour hs = 4;</code>
       */
      public Builder setHs(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour value) {
        if (hsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHsIsMutable();
          hs_.set(index, value);
          onChanged();
        } else {
          hsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityHour hs = 4;</code>
       */
      public Builder setHs(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour.Builder builderForValue) {
        if (hsBuilder_ == null) {
          ensureHsIsMutable();
          hs_.set(index, builderForValue.build());
          onChanged();
        } else {
          hsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityHour hs = 4;</code>
       */
      public Builder addHs(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour value) {
        if (hsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHsIsMutable();
          hs_.add(value);
          onChanged();
        } else {
          hsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityHour hs = 4;</code>
       */
      public Builder addHs(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour value) {
        if (hsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHsIsMutable();
          hs_.add(index, value);
          onChanged();
        } else {
          hsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityHour hs = 4;</code>
       */
      public Builder addHs(
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour.Builder builderForValue) {
        if (hsBuilder_ == null) {
          ensureHsIsMutable();
          hs_.add(builderForValue.build());
          onChanged();
        } else {
          hsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityHour hs = 4;</code>
       */
      public Builder addHs(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour.Builder builderForValue) {
        if (hsBuilder_ == null) {
          ensureHsIsMutable();
          hs_.add(index, builderForValue.build());
          onChanged();
        } else {
          hsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityHour hs = 4;</code>
       */
      public Builder addAllHs(
          java.lang.Iterable<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour> values) {
        if (hsBuilder_ == null) {
          ensureHsIsMutable();
          super.addAll(values, hs_);
          onChanged();
        } else {
          hsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityHour hs = 4;</code>
       */
      public Builder clearHs() {
        if (hsBuilder_ == null) {
          hs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          hsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityHour hs = 4;</code>
       */
      public Builder removeHs(int index) {
        if (hsBuilder_ == null) {
          ensureHsIsMutable();
          hs_.remove(index);
          onChanged();
        } else {
          hsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityHour hs = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour.Builder getHsBuilder(
          int index) {
        return getHsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .histogram.QuantityHour hs = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHourOrBuilder getHsOrBuilder(
          int index) {
        if (hsBuilder_ == null) {
          return hs_.get(index);  } else {
          return hsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .histogram.QuantityHour hs = 4;</code>
       */
      public java.util.List<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHourOrBuilder> 
           getHsOrBuilderList() {
        if (hsBuilder_ != null) {
          return hsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(hs_);
        }
      }
      /**
       * <code>repeated .histogram.QuantityHour hs = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour.Builder addHsBuilder() {
        return getHsFieldBuilder().addBuilder(
            me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour.getDefaultInstance());
      }
      /**
       * <code>repeated .histogram.QuantityHour hs = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour.Builder addHsBuilder(
          int index) {
        return getHsFieldBuilder().addBuilder(
            index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour.getDefaultInstance());
      }
      /**
       * <code>repeated .histogram.QuantityHour hs = 4;</code>
       */
      public java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour.Builder> 
           getHsBuilderList() {
        return getHsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHourOrBuilder> 
          getHsFieldBuilder() {
        if (hsBuilder_ == null) {
          hsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHour.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityHourOrBuilder>(
                  hs_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          hs_ = null;
        }
        return hsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:histogram.QuantityDay)
    }

    static {
      defaultInstance = new QuantityDay(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:histogram.QuantityDay)
  }

  public interface QuantityMonthOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 m = 1;
    /**
     * <code>required int32 m = 1;</code>
     */
    boolean hasM();
    /**
     * <code>required int32 m = 1;</code>
     */
    int getM();

    // required int64 q = 2;
    /**
     * <code>required int64 q = 2;</code>
     */
    boolean hasQ();
    /**
     * <code>required int64 q = 2;</code>
     */
    long getQ();

    // required float PCT = 3;
    /**
     * <code>required float PCT = 3;</code>
     */
    boolean hasPCT();
    /**
     * <code>required float PCT = 3;</code>
     */
    float getPCT();

    // repeated .histogram.QuantityDay ds = 4;
    /**
     * <code>repeated .histogram.QuantityDay ds = 4;</code>
     */
    java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay> 
        getDsList();
    /**
     * <code>repeated .histogram.QuantityDay ds = 4;</code>
     */
    me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay getDs(int index);
    /**
     * <code>repeated .histogram.QuantityDay ds = 4;</code>
     */
    int getDsCount();
    /**
     * <code>repeated .histogram.QuantityDay ds = 4;</code>
     */
    java.util.List<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDayOrBuilder> 
        getDsOrBuilderList();
    /**
     * <code>repeated .histogram.QuantityDay ds = 4;</code>
     */
    me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDayOrBuilder getDsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code histogram.QuantityMonth}
   */
  public static final class QuantityMonth extends
      com.google.protobuf.GeneratedMessage
      implements QuantityMonthOrBuilder {
    // Use QuantityMonth.newBuilder() to construct.
    private QuantityMonth(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private QuantityMonth(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final QuantityMonth defaultInstance;
    public static QuantityMonth getDefaultInstance() {
      return defaultInstance;
    }

    public QuantityMonth getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private QuantityMonth(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              m_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              q_ = input.readInt64();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              pCT_ = input.readFloat();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                ds_ = new java.util.ArrayList<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay>();
                mutable_bitField0_ |= 0x00000008;
              }
              ds_.add(input.readMessage(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          ds_ = java.util.Collections.unmodifiableList(ds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityMonth_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityMonth_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth.class, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth.Builder.class);
    }

    public static com.google.protobuf.Parser<QuantityMonth> PARSER =
        new com.google.protobuf.AbstractParser<QuantityMonth>() {
      public QuantityMonth parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new QuantityMonth(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<QuantityMonth> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 m = 1;
    public static final int M_FIELD_NUMBER = 1;
    private int m_;
    /**
     * <code>required int32 m = 1;</code>
     */
    public boolean hasM() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 m = 1;</code>
     */
    public int getM() {
      return m_;
    }

    // required int64 q = 2;
    public static final int Q_FIELD_NUMBER = 2;
    private long q_;
    /**
     * <code>required int64 q = 2;</code>
     */
    public boolean hasQ() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 q = 2;</code>
     */
    public long getQ() {
      return q_;
    }

    // required float PCT = 3;
    public static final int PCT_FIELD_NUMBER = 3;
    private float pCT_;
    /**
     * <code>required float PCT = 3;</code>
     */
    public boolean hasPCT() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float PCT = 3;</code>
     */
    public float getPCT() {
      return pCT_;
    }

    // repeated .histogram.QuantityDay ds = 4;
    public static final int DS_FIELD_NUMBER = 4;
    private java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay> ds_;
    /**
     * <code>repeated .histogram.QuantityDay ds = 4;</code>
     */
    public java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay> getDsList() {
      return ds_;
    }
    /**
     * <code>repeated .histogram.QuantityDay ds = 4;</code>
     */
    public java.util.List<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDayOrBuilder> 
        getDsOrBuilderList() {
      return ds_;
    }
    /**
     * <code>repeated .histogram.QuantityDay ds = 4;</code>
     */
    public int getDsCount() {
      return ds_.size();
    }
    /**
     * <code>repeated .histogram.QuantityDay ds = 4;</code>
     */
    public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay getDs(int index) {
      return ds_.get(index);
    }
    /**
     * <code>repeated .histogram.QuantityDay ds = 4;</code>
     */
    public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDayOrBuilder getDsOrBuilder(
        int index) {
      return ds_.get(index);
    }

    private void initFields() {
      m_ = 0;
      q_ = 0L;
      pCT_ = 0F;
      ds_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasM()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQ()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPCT()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getDsCount(); i++) {
        if (!getDs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, m_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, q_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, pCT_);
      }
      for (int i = 0; i < ds_.size(); i++) {
        output.writeMessage(4, ds_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, m_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, q_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, pCT_);
      }
      for (int i = 0; i < ds_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, ds_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code histogram.QuantityMonth}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonthOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityMonth_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityMonth_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth.class, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth.Builder.class);
      }

      // Construct using me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        m_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        q_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        pCT_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (dsBuilder_ == null) {
          ds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          dsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityMonth_descriptor;
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth getDefaultInstanceForType() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth.getDefaultInstance();
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth build() {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth buildPartial() {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth result = new me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.m_ = m_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.q_ = q_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pCT_ = pCT_;
        if (dsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            ds_ = java.util.Collections.unmodifiableList(ds_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.ds_ = ds_;
        } else {
          result.ds_ = dsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth) {
          return mergeFrom((me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth other) {
        if (other == me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth.getDefaultInstance()) return this;
        if (other.hasM()) {
          setM(other.getM());
        }
        if (other.hasQ()) {
          setQ(other.getQ());
        }
        if (other.hasPCT()) {
          setPCT(other.getPCT());
        }
        if (dsBuilder_ == null) {
          if (!other.ds_.isEmpty()) {
            if (ds_.isEmpty()) {
              ds_ = other.ds_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureDsIsMutable();
              ds_.addAll(other.ds_);
            }
            onChanged();
          }
        } else {
          if (!other.ds_.isEmpty()) {
            if (dsBuilder_.isEmpty()) {
              dsBuilder_.dispose();
              dsBuilder_ = null;
              ds_ = other.ds_;
              bitField0_ = (bitField0_ & ~0x00000008);
              dsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDsFieldBuilder() : null;
            } else {
              dsBuilder_.addAllMessages(other.ds_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasM()) {
          
          return false;
        }
        if (!hasQ()) {
          
          return false;
        }
        if (!hasPCT()) {
          
          return false;
        }
        for (int i = 0; i < getDsCount(); i++) {
          if (!getDs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 m = 1;
      private int m_ ;
      /**
       * <code>required int32 m = 1;</code>
       */
      public boolean hasM() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 m = 1;</code>
       */
      public int getM() {
        return m_;
      }
      /**
       * <code>required int32 m = 1;</code>
       */
      public Builder setM(int value) {
        bitField0_ |= 0x00000001;
        m_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 m = 1;</code>
       */
      public Builder clearM() {
        bitField0_ = (bitField0_ & ~0x00000001);
        m_ = 0;
        onChanged();
        return this;
      }

      // required int64 q = 2;
      private long q_ ;
      /**
       * <code>required int64 q = 2;</code>
       */
      public boolean hasQ() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 q = 2;</code>
       */
      public long getQ() {
        return q_;
      }
      /**
       * <code>required int64 q = 2;</code>
       */
      public Builder setQ(long value) {
        bitField0_ |= 0x00000002;
        q_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 q = 2;</code>
       */
      public Builder clearQ() {
        bitField0_ = (bitField0_ & ~0x00000002);
        q_ = 0L;
        onChanged();
        return this;
      }

      // required float PCT = 3;
      private float pCT_ ;
      /**
       * <code>required float PCT = 3;</code>
       */
      public boolean hasPCT() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float PCT = 3;</code>
       */
      public float getPCT() {
        return pCT_;
      }
      /**
       * <code>required float PCT = 3;</code>
       */
      public Builder setPCT(float value) {
        bitField0_ |= 0x00000004;
        pCT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float PCT = 3;</code>
       */
      public Builder clearPCT() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pCT_ = 0F;
        onChanged();
        return this;
      }

      // repeated .histogram.QuantityDay ds = 4;
      private java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay> ds_ =
        java.util.Collections.emptyList();
      private void ensureDsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          ds_ = new java.util.ArrayList<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay>(ds_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDayOrBuilder> dsBuilder_;

      /**
       * <code>repeated .histogram.QuantityDay ds = 4;</code>
       */
      public java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay> getDsList() {
        if (dsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ds_);
        } else {
          return dsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .histogram.QuantityDay ds = 4;</code>
       */
      public int getDsCount() {
        if (dsBuilder_ == null) {
          return ds_.size();
        } else {
          return dsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .histogram.QuantityDay ds = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay getDs(int index) {
        if (dsBuilder_ == null) {
          return ds_.get(index);
        } else {
          return dsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .histogram.QuantityDay ds = 4;</code>
       */
      public Builder setDs(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay value) {
        if (dsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDsIsMutable();
          ds_.set(index, value);
          onChanged();
        } else {
          dsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityDay ds = 4;</code>
       */
      public Builder setDs(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay.Builder builderForValue) {
        if (dsBuilder_ == null) {
          ensureDsIsMutable();
          ds_.set(index, builderForValue.build());
          onChanged();
        } else {
          dsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityDay ds = 4;</code>
       */
      public Builder addDs(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay value) {
        if (dsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDsIsMutable();
          ds_.add(value);
          onChanged();
        } else {
          dsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityDay ds = 4;</code>
       */
      public Builder addDs(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay value) {
        if (dsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDsIsMutable();
          ds_.add(index, value);
          onChanged();
        } else {
          dsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityDay ds = 4;</code>
       */
      public Builder addDs(
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay.Builder builderForValue) {
        if (dsBuilder_ == null) {
          ensureDsIsMutable();
          ds_.add(builderForValue.build());
          onChanged();
        } else {
          dsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityDay ds = 4;</code>
       */
      public Builder addDs(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay.Builder builderForValue) {
        if (dsBuilder_ == null) {
          ensureDsIsMutable();
          ds_.add(index, builderForValue.build());
          onChanged();
        } else {
          dsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityDay ds = 4;</code>
       */
      public Builder addAllDs(
          java.lang.Iterable<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay> values) {
        if (dsBuilder_ == null) {
          ensureDsIsMutable();
          super.addAll(values, ds_);
          onChanged();
        } else {
          dsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityDay ds = 4;</code>
       */
      public Builder clearDs() {
        if (dsBuilder_ == null) {
          ds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          dsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityDay ds = 4;</code>
       */
      public Builder removeDs(int index) {
        if (dsBuilder_ == null) {
          ensureDsIsMutable();
          ds_.remove(index);
          onChanged();
        } else {
          dsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityDay ds = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay.Builder getDsBuilder(
          int index) {
        return getDsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .histogram.QuantityDay ds = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDayOrBuilder getDsOrBuilder(
          int index) {
        if (dsBuilder_ == null) {
          return ds_.get(index);  } else {
          return dsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .histogram.QuantityDay ds = 4;</code>
       */
      public java.util.List<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDayOrBuilder> 
           getDsOrBuilderList() {
        if (dsBuilder_ != null) {
          return dsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ds_);
        }
      }
      /**
       * <code>repeated .histogram.QuantityDay ds = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay.Builder addDsBuilder() {
        return getDsFieldBuilder().addBuilder(
            me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay.getDefaultInstance());
      }
      /**
       * <code>repeated .histogram.QuantityDay ds = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay.Builder addDsBuilder(
          int index) {
        return getDsFieldBuilder().addBuilder(
            index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay.getDefaultInstance());
      }
      /**
       * <code>repeated .histogram.QuantityDay ds = 4;</code>
       */
      public java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay.Builder> 
           getDsBuilderList() {
        return getDsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDayOrBuilder> 
          getDsFieldBuilder() {
        if (dsBuilder_ == null) {
          dsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDay.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityDayOrBuilder>(
                  ds_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          ds_ = null;
        }
        return dsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:histogram.QuantityMonth)
    }

    static {
      defaultInstance = new QuantityMonth(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:histogram.QuantityMonth)
  }

  public interface QuantityYearOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 y = 1;
    /**
     * <code>required int32 y = 1;</code>
     */
    boolean hasY();
    /**
     * <code>required int32 y = 1;</code>
     */
    int getY();

    // required int64 q = 2;
    /**
     * <code>required int64 q = 2;</code>
     */
    boolean hasQ();
    /**
     * <code>required int64 q = 2;</code>
     */
    long getQ();

    // required float PCT = 3;
    /**
     * <code>required float PCT = 3;</code>
     */
    boolean hasPCT();
    /**
     * <code>required float PCT = 3;</code>
     */
    float getPCT();

    // repeated .histogram.QuantityMonth ms = 4;
    /**
     * <code>repeated .histogram.QuantityMonth ms = 4;</code>
     */
    java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth> 
        getMsList();
    /**
     * <code>repeated .histogram.QuantityMonth ms = 4;</code>
     */
    me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth getMs(int index);
    /**
     * <code>repeated .histogram.QuantityMonth ms = 4;</code>
     */
    int getMsCount();
    /**
     * <code>repeated .histogram.QuantityMonth ms = 4;</code>
     */
    java.util.List<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonthOrBuilder> 
        getMsOrBuilderList();
    /**
     * <code>repeated .histogram.QuantityMonth ms = 4;</code>
     */
    me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonthOrBuilder getMsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code histogram.QuantityYear}
   */
  public static final class QuantityYear extends
      com.google.protobuf.GeneratedMessage
      implements QuantityYearOrBuilder {
    // Use QuantityYear.newBuilder() to construct.
    private QuantityYear(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private QuantityYear(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final QuantityYear defaultInstance;
    public static QuantityYear getDefaultInstance() {
      return defaultInstance;
    }

    public QuantityYear getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private QuantityYear(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              y_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              q_ = input.readInt64();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              pCT_ = input.readFloat();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                ms_ = new java.util.ArrayList<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth>();
                mutable_bitField0_ |= 0x00000008;
              }
              ms_.add(input.readMessage(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          ms_ = java.util.Collections.unmodifiableList(ms_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityYear_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityYear_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear.class, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear.Builder.class);
    }

    public static com.google.protobuf.Parser<QuantityYear> PARSER =
        new com.google.protobuf.AbstractParser<QuantityYear>() {
      public QuantityYear parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new QuantityYear(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<QuantityYear> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 y = 1;
    public static final int Y_FIELD_NUMBER = 1;
    private int y_;
    /**
     * <code>required int32 y = 1;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 y = 1;</code>
     */
    public int getY() {
      return y_;
    }

    // required int64 q = 2;
    public static final int Q_FIELD_NUMBER = 2;
    private long q_;
    /**
     * <code>required int64 q = 2;</code>
     */
    public boolean hasQ() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 q = 2;</code>
     */
    public long getQ() {
      return q_;
    }

    // required float PCT = 3;
    public static final int PCT_FIELD_NUMBER = 3;
    private float pCT_;
    /**
     * <code>required float PCT = 3;</code>
     */
    public boolean hasPCT() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float PCT = 3;</code>
     */
    public float getPCT() {
      return pCT_;
    }

    // repeated .histogram.QuantityMonth ms = 4;
    public static final int MS_FIELD_NUMBER = 4;
    private java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth> ms_;
    /**
     * <code>repeated .histogram.QuantityMonth ms = 4;</code>
     */
    public java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth> getMsList() {
      return ms_;
    }
    /**
     * <code>repeated .histogram.QuantityMonth ms = 4;</code>
     */
    public java.util.List<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonthOrBuilder> 
        getMsOrBuilderList() {
      return ms_;
    }
    /**
     * <code>repeated .histogram.QuantityMonth ms = 4;</code>
     */
    public int getMsCount() {
      return ms_.size();
    }
    /**
     * <code>repeated .histogram.QuantityMonth ms = 4;</code>
     */
    public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth getMs(int index) {
      return ms_.get(index);
    }
    /**
     * <code>repeated .histogram.QuantityMonth ms = 4;</code>
     */
    public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonthOrBuilder getMsOrBuilder(
        int index) {
      return ms_.get(index);
    }

    private void initFields() {
      y_ = 0;
      q_ = 0L;
      pCT_ = 0F;
      ms_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQ()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPCT()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getMsCount(); i++) {
        if (!getMs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, y_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, q_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, pCT_);
      }
      for (int i = 0; i < ms_.size(); i++) {
        output.writeMessage(4, ms_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, y_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, q_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, pCT_);
      }
      for (int i = 0; i < ms_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, ms_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code histogram.QuantityYear}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYearOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityYear_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityYear_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear.class, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear.Builder.class);
      }

      // Construct using me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        q_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        pCT_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (msBuilder_ == null) {
          ms_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          msBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_QuantityYear_descriptor;
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear getDefaultInstanceForType() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear.getDefaultInstance();
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear build() {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear buildPartial() {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear result = new me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.q_ = q_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pCT_ = pCT_;
        if (msBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            ms_ = java.util.Collections.unmodifiableList(ms_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.ms_ = ms_;
        } else {
          result.ms_ = msBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear) {
          return mergeFrom((me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear other) {
        if (other == me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear.getDefaultInstance()) return this;
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasQ()) {
          setQ(other.getQ());
        }
        if (other.hasPCT()) {
          setPCT(other.getPCT());
        }
        if (msBuilder_ == null) {
          if (!other.ms_.isEmpty()) {
            if (ms_.isEmpty()) {
              ms_ = other.ms_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureMsIsMutable();
              ms_.addAll(other.ms_);
            }
            onChanged();
          }
        } else {
          if (!other.ms_.isEmpty()) {
            if (msBuilder_.isEmpty()) {
              msBuilder_.dispose();
              msBuilder_ = null;
              ms_ = other.ms_;
              bitField0_ = (bitField0_ & ~0x00000008);
              msBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMsFieldBuilder() : null;
            } else {
              msBuilder_.addAllMessages(other.ms_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasY()) {
          
          return false;
        }
        if (!hasQ()) {
          
          return false;
        }
        if (!hasPCT()) {
          
          return false;
        }
        for (int i = 0; i < getMsCount(); i++) {
          if (!getMs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 y = 1;
      private int y_ ;
      /**
       * <code>required int32 y = 1;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 y = 1;</code>
       */
      public int getY() {
        return y_;
      }
      /**
       * <code>required int32 y = 1;</code>
       */
      public Builder setY(int value) {
        bitField0_ |= 0x00000001;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 y = 1;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0;
        onChanged();
        return this;
      }

      // required int64 q = 2;
      private long q_ ;
      /**
       * <code>required int64 q = 2;</code>
       */
      public boolean hasQ() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 q = 2;</code>
       */
      public long getQ() {
        return q_;
      }
      /**
       * <code>required int64 q = 2;</code>
       */
      public Builder setQ(long value) {
        bitField0_ |= 0x00000002;
        q_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 q = 2;</code>
       */
      public Builder clearQ() {
        bitField0_ = (bitField0_ & ~0x00000002);
        q_ = 0L;
        onChanged();
        return this;
      }

      // required float PCT = 3;
      private float pCT_ ;
      /**
       * <code>required float PCT = 3;</code>
       */
      public boolean hasPCT() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float PCT = 3;</code>
       */
      public float getPCT() {
        return pCT_;
      }
      /**
       * <code>required float PCT = 3;</code>
       */
      public Builder setPCT(float value) {
        bitField0_ |= 0x00000004;
        pCT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float PCT = 3;</code>
       */
      public Builder clearPCT() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pCT_ = 0F;
        onChanged();
        return this;
      }

      // repeated .histogram.QuantityMonth ms = 4;
      private java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth> ms_ =
        java.util.Collections.emptyList();
      private void ensureMsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          ms_ = new java.util.ArrayList<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth>(ms_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonthOrBuilder> msBuilder_;

      /**
       * <code>repeated .histogram.QuantityMonth ms = 4;</code>
       */
      public java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth> getMsList() {
        if (msBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ms_);
        } else {
          return msBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .histogram.QuantityMonth ms = 4;</code>
       */
      public int getMsCount() {
        if (msBuilder_ == null) {
          return ms_.size();
        } else {
          return msBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .histogram.QuantityMonth ms = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth getMs(int index) {
        if (msBuilder_ == null) {
          return ms_.get(index);
        } else {
          return msBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .histogram.QuantityMonth ms = 4;</code>
       */
      public Builder setMs(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth value) {
        if (msBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMsIsMutable();
          ms_.set(index, value);
          onChanged();
        } else {
          msBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityMonth ms = 4;</code>
       */
      public Builder setMs(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth.Builder builderForValue) {
        if (msBuilder_ == null) {
          ensureMsIsMutable();
          ms_.set(index, builderForValue.build());
          onChanged();
        } else {
          msBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityMonth ms = 4;</code>
       */
      public Builder addMs(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth value) {
        if (msBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMsIsMutable();
          ms_.add(value);
          onChanged();
        } else {
          msBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityMonth ms = 4;</code>
       */
      public Builder addMs(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth value) {
        if (msBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMsIsMutable();
          ms_.add(index, value);
          onChanged();
        } else {
          msBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityMonth ms = 4;</code>
       */
      public Builder addMs(
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth.Builder builderForValue) {
        if (msBuilder_ == null) {
          ensureMsIsMutable();
          ms_.add(builderForValue.build());
          onChanged();
        } else {
          msBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityMonth ms = 4;</code>
       */
      public Builder addMs(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth.Builder builderForValue) {
        if (msBuilder_ == null) {
          ensureMsIsMutable();
          ms_.add(index, builderForValue.build());
          onChanged();
        } else {
          msBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityMonth ms = 4;</code>
       */
      public Builder addAllMs(
          java.lang.Iterable<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth> values) {
        if (msBuilder_ == null) {
          ensureMsIsMutable();
          super.addAll(values, ms_);
          onChanged();
        } else {
          msBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityMonth ms = 4;</code>
       */
      public Builder clearMs() {
        if (msBuilder_ == null) {
          ms_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          msBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityMonth ms = 4;</code>
       */
      public Builder removeMs(int index) {
        if (msBuilder_ == null) {
          ensureMsIsMutable();
          ms_.remove(index);
          onChanged();
        } else {
          msBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityMonth ms = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth.Builder getMsBuilder(
          int index) {
        return getMsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .histogram.QuantityMonth ms = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonthOrBuilder getMsOrBuilder(
          int index) {
        if (msBuilder_ == null) {
          return ms_.get(index);  } else {
          return msBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .histogram.QuantityMonth ms = 4;</code>
       */
      public java.util.List<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonthOrBuilder> 
           getMsOrBuilderList() {
        if (msBuilder_ != null) {
          return msBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ms_);
        }
      }
      /**
       * <code>repeated .histogram.QuantityMonth ms = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth.Builder addMsBuilder() {
        return getMsFieldBuilder().addBuilder(
            me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth.getDefaultInstance());
      }
      /**
       * <code>repeated .histogram.QuantityMonth ms = 4;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth.Builder addMsBuilder(
          int index) {
        return getMsFieldBuilder().addBuilder(
            index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth.getDefaultInstance());
      }
      /**
       * <code>repeated .histogram.QuantityMonth ms = 4;</code>
       */
      public java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth.Builder> 
           getMsBuilderList() {
        return getMsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonthOrBuilder> 
          getMsFieldBuilder() {
        if (msBuilder_ == null) {
          msBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonth.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityMonthOrBuilder>(
                  ms_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          ms_ = null;
        }
        return msBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:histogram.QuantityYear)
    }

    static {
      defaultInstance = new QuantityYear(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:histogram.QuantityYear)
  }

  public interface QuantitiesOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .histogram.QuantityYear ys = 1;
    /**
     * <code>repeated .histogram.QuantityYear ys = 1;</code>
     */
    java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear> 
        getYsList();
    /**
     * <code>repeated .histogram.QuantityYear ys = 1;</code>
     */
    me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear getYs(int index);
    /**
     * <code>repeated .histogram.QuantityYear ys = 1;</code>
     */
    int getYsCount();
    /**
     * <code>repeated .histogram.QuantityYear ys = 1;</code>
     */
    java.util.List<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYearOrBuilder> 
        getYsOrBuilderList();
    /**
     * <code>repeated .histogram.QuantityYear ys = 1;</code>
     */
    me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYearOrBuilder getYsOrBuilder(
        int index);

    // required .histogram.Interval interval = 2;
    /**
     * <code>required .histogram.Interval interval = 2;</code>
     */
    boolean hasInterval();
    /**
     * <code>required .histogram.Interval interval = 2;</code>
     */
    me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval getInterval();
    /**
     * <code>required .histogram.Interval interval = 2;</code>
     */
    me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.IntervalOrBuilder getIntervalOrBuilder();
  }
  /**
   * Protobuf type {@code histogram.Quantities}
   */
  public static final class Quantities extends
      com.google.protobuf.GeneratedMessage
      implements QuantitiesOrBuilder {
    // Use Quantities.newBuilder() to construct.
    private Quantities(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Quantities(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Quantities defaultInstance;
    public static Quantities getDefaultInstance() {
      return defaultInstance;
    }

    public Quantities getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Quantities(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                ys_ = new java.util.ArrayList<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear>();
                mutable_bitField0_ |= 0x00000001;
              }
              ys_.add(input.readMessage(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = interval_.toBuilder();
              }
              interval_ = input.readMessage(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(interval_);
                interval_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          ys_ = java.util.Collections.unmodifiableList(ys_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_Quantities_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_Quantities_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities.class, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities.Builder.class);
    }

    public static com.google.protobuf.Parser<Quantities> PARSER =
        new com.google.protobuf.AbstractParser<Quantities>() {
      public Quantities parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Quantities(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Quantities> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .histogram.QuantityYear ys = 1;
    public static final int YS_FIELD_NUMBER = 1;
    private java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear> ys_;
    /**
     * <code>repeated .histogram.QuantityYear ys = 1;</code>
     */
    public java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear> getYsList() {
      return ys_;
    }
    /**
     * <code>repeated .histogram.QuantityYear ys = 1;</code>
     */
    public java.util.List<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYearOrBuilder> 
        getYsOrBuilderList() {
      return ys_;
    }
    /**
     * <code>repeated .histogram.QuantityYear ys = 1;</code>
     */
    public int getYsCount() {
      return ys_.size();
    }
    /**
     * <code>repeated .histogram.QuantityYear ys = 1;</code>
     */
    public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear getYs(int index) {
      return ys_.get(index);
    }
    /**
     * <code>repeated .histogram.QuantityYear ys = 1;</code>
     */
    public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYearOrBuilder getYsOrBuilder(
        int index) {
      return ys_.get(index);
    }

    // required .histogram.Interval interval = 2;
    public static final int INTERVAL_FIELD_NUMBER = 2;
    private me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval interval_;
    /**
     * <code>required .histogram.Interval interval = 2;</code>
     */
    public boolean hasInterval() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .histogram.Interval interval = 2;</code>
     */
    public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval getInterval() {
      return interval_;
    }
    /**
     * <code>required .histogram.Interval interval = 2;</code>
     */
    public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.IntervalOrBuilder getIntervalOrBuilder() {
      return interval_;
    }

    private void initFields() {
      ys_ = java.util.Collections.emptyList();
      interval_ = me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasInterval()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getYsCount(); i++) {
        if (!getYs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getInterval().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < ys_.size(); i++) {
        output.writeMessage(1, ys_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(2, interval_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < ys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, ys_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, interval_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code histogram.Quantities}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitiesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_Quantities_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_Quantities_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities.class, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities.Builder.class);
      }

      // Construct using me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getYsFieldBuilder();
          getIntervalFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (ysBuilder_ == null) {
          ys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ysBuilder_.clear();
        }
        if (intervalBuilder_ == null) {
          interval_ = me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval.getDefaultInstance();
        } else {
          intervalBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_Quantities_descriptor;
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities getDefaultInstanceForType() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities.getDefaultInstance();
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities build() {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities buildPartial() {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities result = new me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (ysBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            ys_ = java.util.Collections.unmodifiableList(ys_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.ys_ = ys_;
        } else {
          result.ys_ = ysBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        if (intervalBuilder_ == null) {
          result.interval_ = interval_;
        } else {
          result.interval_ = intervalBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities) {
          return mergeFrom((me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities other) {
        if (other == me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities.getDefaultInstance()) return this;
        if (ysBuilder_ == null) {
          if (!other.ys_.isEmpty()) {
            if (ys_.isEmpty()) {
              ys_ = other.ys_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureYsIsMutable();
              ys_.addAll(other.ys_);
            }
            onChanged();
          }
        } else {
          if (!other.ys_.isEmpty()) {
            if (ysBuilder_.isEmpty()) {
              ysBuilder_.dispose();
              ysBuilder_ = null;
              ys_ = other.ys_;
              bitField0_ = (bitField0_ & ~0x00000001);
              ysBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getYsFieldBuilder() : null;
            } else {
              ysBuilder_.addAllMessages(other.ys_);
            }
          }
        }
        if (other.hasInterval()) {
          mergeInterval(other.getInterval());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasInterval()) {
          
          return false;
        }
        for (int i = 0; i < getYsCount(); i++) {
          if (!getYs(i).isInitialized()) {
            
            return false;
          }
        }
        if (!getInterval().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .histogram.QuantityYear ys = 1;
      private java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear> ys_ =
        java.util.Collections.emptyList();
      private void ensureYsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          ys_ = new java.util.ArrayList<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear>(ys_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYearOrBuilder> ysBuilder_;

      /**
       * <code>repeated .histogram.QuantityYear ys = 1;</code>
       */
      public java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear> getYsList() {
        if (ysBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ys_);
        } else {
          return ysBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .histogram.QuantityYear ys = 1;</code>
       */
      public int getYsCount() {
        if (ysBuilder_ == null) {
          return ys_.size();
        } else {
          return ysBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .histogram.QuantityYear ys = 1;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear getYs(int index) {
        if (ysBuilder_ == null) {
          return ys_.get(index);
        } else {
          return ysBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .histogram.QuantityYear ys = 1;</code>
       */
      public Builder setYs(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear value) {
        if (ysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureYsIsMutable();
          ys_.set(index, value);
          onChanged();
        } else {
          ysBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityYear ys = 1;</code>
       */
      public Builder setYs(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear.Builder builderForValue) {
        if (ysBuilder_ == null) {
          ensureYsIsMutable();
          ys_.set(index, builderForValue.build());
          onChanged();
        } else {
          ysBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityYear ys = 1;</code>
       */
      public Builder addYs(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear value) {
        if (ysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureYsIsMutable();
          ys_.add(value);
          onChanged();
        } else {
          ysBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityYear ys = 1;</code>
       */
      public Builder addYs(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear value) {
        if (ysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureYsIsMutable();
          ys_.add(index, value);
          onChanged();
        } else {
          ysBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityYear ys = 1;</code>
       */
      public Builder addYs(
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear.Builder builderForValue) {
        if (ysBuilder_ == null) {
          ensureYsIsMutable();
          ys_.add(builderForValue.build());
          onChanged();
        } else {
          ysBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityYear ys = 1;</code>
       */
      public Builder addYs(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear.Builder builderForValue) {
        if (ysBuilder_ == null) {
          ensureYsIsMutable();
          ys_.add(index, builderForValue.build());
          onChanged();
        } else {
          ysBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityYear ys = 1;</code>
       */
      public Builder addAllYs(
          java.lang.Iterable<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear> values) {
        if (ysBuilder_ == null) {
          ensureYsIsMutable();
          super.addAll(values, ys_);
          onChanged();
        } else {
          ysBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityYear ys = 1;</code>
       */
      public Builder clearYs() {
        if (ysBuilder_ == null) {
          ys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          ysBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityYear ys = 1;</code>
       */
      public Builder removeYs(int index) {
        if (ysBuilder_ == null) {
          ensureYsIsMutable();
          ys_.remove(index);
          onChanged();
        } else {
          ysBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.QuantityYear ys = 1;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear.Builder getYsBuilder(
          int index) {
        return getYsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .histogram.QuantityYear ys = 1;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYearOrBuilder getYsOrBuilder(
          int index) {
        if (ysBuilder_ == null) {
          return ys_.get(index);  } else {
          return ysBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .histogram.QuantityYear ys = 1;</code>
       */
      public java.util.List<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYearOrBuilder> 
           getYsOrBuilderList() {
        if (ysBuilder_ != null) {
          return ysBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ys_);
        }
      }
      /**
       * <code>repeated .histogram.QuantityYear ys = 1;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear.Builder addYsBuilder() {
        return getYsFieldBuilder().addBuilder(
            me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear.getDefaultInstance());
      }
      /**
       * <code>repeated .histogram.QuantityYear ys = 1;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear.Builder addYsBuilder(
          int index) {
        return getYsFieldBuilder().addBuilder(
            index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear.getDefaultInstance());
      }
      /**
       * <code>repeated .histogram.QuantityYear ys = 1;</code>
       */
      public java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear.Builder> 
           getYsBuilderList() {
        return getYsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYearOrBuilder> 
          getYsFieldBuilder() {
        if (ysBuilder_ == null) {
          ysBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYear.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantityYearOrBuilder>(
                  ys_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          ys_ = null;
        }
        return ysBuilder_;
      }

      // required .histogram.Interval interval = 2;
      private me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval interval_ = me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.IntervalOrBuilder> intervalBuilder_;
      /**
       * <code>required .histogram.Interval interval = 2;</code>
       */
      public boolean hasInterval() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .histogram.Interval interval = 2;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval getInterval() {
        if (intervalBuilder_ == null) {
          return interval_;
        } else {
          return intervalBuilder_.getMessage();
        }
      }
      /**
       * <code>required .histogram.Interval interval = 2;</code>
       */
      public Builder setInterval(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval value) {
        if (intervalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          interval_ = value;
          onChanged();
        } else {
          intervalBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .histogram.Interval interval = 2;</code>
       */
      public Builder setInterval(
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval.Builder builderForValue) {
        if (intervalBuilder_ == null) {
          interval_ = builderForValue.build();
          onChanged();
        } else {
          intervalBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .histogram.Interval interval = 2;</code>
       */
      public Builder mergeInterval(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval value) {
        if (intervalBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              interval_ != me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval.getDefaultInstance()) {
            interval_ =
              me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval.newBuilder(interval_).mergeFrom(value).buildPartial();
          } else {
            interval_ = value;
          }
          onChanged();
        } else {
          intervalBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .histogram.Interval interval = 2;</code>
       */
      public Builder clearInterval() {
        if (intervalBuilder_ == null) {
          interval_ = me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval.getDefaultInstance();
          onChanged();
        } else {
          intervalBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .histogram.Interval interval = 2;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval.Builder getIntervalBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getIntervalFieldBuilder().getBuilder();
      }
      /**
       * <code>required .histogram.Interval interval = 2;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.IntervalOrBuilder getIntervalOrBuilder() {
        if (intervalBuilder_ != null) {
          return intervalBuilder_.getMessageOrBuilder();
        } else {
          return interval_;
        }
      }
      /**
       * <code>required .histogram.Interval interval = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.IntervalOrBuilder> 
          getIntervalFieldBuilder() {
        if (intervalBuilder_ == null) {
          intervalBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Interval.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.IntervalOrBuilder>(
                  interval_,
                  getParentForChildren(),
                  isClean());
          interval_ = null;
        }
        return intervalBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:histogram.Quantities)
    }

    static {
      defaultInstance = new Quantities(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:histogram.Quantities)
  }

  public interface HistogramQuantitiesRSOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string id = 1;
    /**
     * <code>required string id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <code>required string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    // required string shortName = 2;
    /**
     * <code>required string shortName = 2;</code>
     */
    boolean hasShortName();
    /**
     * <code>required string shortName = 2;</code>
     */
    java.lang.String getShortName();
    /**
     * <code>required string shortName = 2;</code>
     */
    com.google.protobuf.ByteString
        getShortNameBytes();

    // required int64 rsTime = 3;
    /**
     * <code>required int64 rsTime = 3;</code>
     */
    boolean hasRsTime();
    /**
     * <code>required int64 rsTime = 3;</code>
     */
    long getRsTime();

    // repeated .histogram.Quantities quantities = 5;
    /**
     * <code>repeated .histogram.Quantities quantities = 5;</code>
     */
    java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities> 
        getQuantitiesList();
    /**
     * <code>repeated .histogram.Quantities quantities = 5;</code>
     */
    me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities getQuantities(int index);
    /**
     * <code>repeated .histogram.Quantities quantities = 5;</code>
     */
    int getQuantitiesCount();
    /**
     * <code>repeated .histogram.Quantities quantities = 5;</code>
     */
    java.util.List<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitiesOrBuilder> 
        getQuantitiesOrBuilderList();
    /**
     * <code>repeated .histogram.Quantities quantities = 5;</code>
     */
    me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitiesOrBuilder getQuantitiesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code histogram.HistogramQuantitiesRS}
   */
  public static final class HistogramQuantitiesRS extends
      com.google.protobuf.GeneratedMessage
      implements HistogramQuantitiesRSOrBuilder {
    // Use HistogramQuantitiesRS.newBuilder() to construct.
    private HistogramQuantitiesRS(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HistogramQuantitiesRS(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HistogramQuantitiesRS defaultInstance;
    public static HistogramQuantitiesRS getDefaultInstance() {
      return defaultInstance;
    }

    public HistogramQuantitiesRS getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HistogramQuantitiesRS(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              id_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              shortName_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              rsTime_ = input.readInt64();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                quantities_ = new java.util.ArrayList<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities>();
                mutable_bitField0_ |= 0x00000008;
              }
              quantities_.add(input.readMessage(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          quantities_ = java.util.Collections.unmodifiableList(quantities_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_HistogramQuantitiesRS_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_HistogramQuantitiesRS_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS.class, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS.Builder.class);
    }

    public static com.google.protobuf.Parser<HistogramQuantitiesRS> PARSER =
        new com.google.protobuf.AbstractParser<HistogramQuantitiesRS>() {
      public HistogramQuantitiesRS parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HistogramQuantitiesRS(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HistogramQuantitiesRS> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private java.lang.Object id_;
    /**
     * <code>required string id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string shortName = 2;
    public static final int SHORTNAME_FIELD_NUMBER = 2;
    private java.lang.Object shortName_;
    /**
     * <code>required string shortName = 2;</code>
     */
    public boolean hasShortName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string shortName = 2;</code>
     */
    public java.lang.String getShortName() {
      java.lang.Object ref = shortName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          shortName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string shortName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getShortNameBytes() {
      java.lang.Object ref = shortName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        shortName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int64 rsTime = 3;
    public static final int RSTIME_FIELD_NUMBER = 3;
    private long rsTime_;
    /**
     * <code>required int64 rsTime = 3;</code>
     */
    public boolean hasRsTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 rsTime = 3;</code>
     */
    public long getRsTime() {
      return rsTime_;
    }

    // repeated .histogram.Quantities quantities = 5;
    public static final int QUANTITIES_FIELD_NUMBER = 5;
    private java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities> quantities_;
    /**
     * <code>repeated .histogram.Quantities quantities = 5;</code>
     */
    public java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities> getQuantitiesList() {
      return quantities_;
    }
    /**
     * <code>repeated .histogram.Quantities quantities = 5;</code>
     */
    public java.util.List<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitiesOrBuilder> 
        getQuantitiesOrBuilderList() {
      return quantities_;
    }
    /**
     * <code>repeated .histogram.Quantities quantities = 5;</code>
     */
    public int getQuantitiesCount() {
      return quantities_.size();
    }
    /**
     * <code>repeated .histogram.Quantities quantities = 5;</code>
     */
    public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities getQuantities(int index) {
      return quantities_.get(index);
    }
    /**
     * <code>repeated .histogram.Quantities quantities = 5;</code>
     */
    public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitiesOrBuilder getQuantitiesOrBuilder(
        int index) {
      return quantities_.get(index);
    }

    private void initFields() {
      id_ = "";
      shortName_ = "";
      rsTime_ = 0L;
      quantities_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasShortName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRsTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getQuantitiesCount(); i++) {
        if (!getQuantities(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getShortNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, rsTime_);
      }
      for (int i = 0; i < quantities_.size(); i++) {
        output.writeMessage(5, quantities_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getShortNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, rsTime_);
      }
      for (int i = 0; i < quantities_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, quantities_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code histogram.HistogramQuantitiesRS}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRSOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_HistogramQuantitiesRS_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_HistogramQuantitiesRS_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS.class, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS.Builder.class);
      }

      // Construct using me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getQuantitiesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        shortName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        rsTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (quantitiesBuilder_ == null) {
          quantities_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          quantitiesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.internal_static_histogram_HistogramQuantitiesRS_descriptor;
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS getDefaultInstanceForType() {
        return me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS.getDefaultInstance();
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS build() {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS buildPartial() {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS result = new me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.shortName_ = shortName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rsTime_ = rsTime_;
        if (quantitiesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            quantities_ = java.util.Collections.unmodifiableList(quantities_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.quantities_ = quantities_;
        } else {
          result.quantities_ = quantitiesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS) {
          return mergeFrom((me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS other) {
        if (other == me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasShortName()) {
          bitField0_ |= 0x00000002;
          shortName_ = other.shortName_;
          onChanged();
        }
        if (other.hasRsTime()) {
          setRsTime(other.getRsTime());
        }
        if (quantitiesBuilder_ == null) {
          if (!other.quantities_.isEmpty()) {
            if (quantities_.isEmpty()) {
              quantities_ = other.quantities_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureQuantitiesIsMutable();
              quantities_.addAll(other.quantities_);
            }
            onChanged();
          }
        } else {
          if (!other.quantities_.isEmpty()) {
            if (quantitiesBuilder_.isEmpty()) {
              quantitiesBuilder_.dispose();
              quantitiesBuilder_ = null;
              quantities_ = other.quantities_;
              bitField0_ = (bitField0_ & ~0x00000008);
              quantitiesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getQuantitiesFieldBuilder() : null;
            } else {
              quantitiesBuilder_.addAllMessages(other.quantities_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasShortName()) {
          
          return false;
        }
        if (!hasRsTime()) {
          
          return false;
        }
        for (int i = 0; i < getQuantitiesCount(); i++) {
          if (!getQuantities(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.HistogramQuantitiesRS) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string id = 1;
      private java.lang.Object id_ = "";
      /**
       * <code>required string id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>required string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      // required string shortName = 2;
      private java.lang.Object shortName_ = "";
      /**
       * <code>required string shortName = 2;</code>
       */
      public boolean hasShortName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string shortName = 2;</code>
       */
      public java.lang.String getShortName() {
        java.lang.Object ref = shortName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          shortName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string shortName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getShortNameBytes() {
        java.lang.Object ref = shortName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          shortName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string shortName = 2;</code>
       */
      public Builder setShortName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        shortName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string shortName = 2;</code>
       */
      public Builder clearShortName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        shortName_ = getDefaultInstance().getShortName();
        onChanged();
        return this;
      }
      /**
       * <code>required string shortName = 2;</code>
       */
      public Builder setShortNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        shortName_ = value;
        onChanged();
        return this;
      }

      // required int64 rsTime = 3;
      private long rsTime_ ;
      /**
       * <code>required int64 rsTime = 3;</code>
       */
      public boolean hasRsTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 rsTime = 3;</code>
       */
      public long getRsTime() {
        return rsTime_;
      }
      /**
       * <code>required int64 rsTime = 3;</code>
       */
      public Builder setRsTime(long value) {
        bitField0_ |= 0x00000004;
        rsTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 rsTime = 3;</code>
       */
      public Builder clearRsTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rsTime_ = 0L;
        onChanged();
        return this;
      }

      // repeated .histogram.Quantities quantities = 5;
      private java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities> quantities_ =
        java.util.Collections.emptyList();
      private void ensureQuantitiesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          quantities_ = new java.util.ArrayList<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities>(quantities_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitiesOrBuilder> quantitiesBuilder_;

      /**
       * <code>repeated .histogram.Quantities quantities = 5;</code>
       */
      public java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities> getQuantitiesList() {
        if (quantitiesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(quantities_);
        } else {
          return quantitiesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .histogram.Quantities quantities = 5;</code>
       */
      public int getQuantitiesCount() {
        if (quantitiesBuilder_ == null) {
          return quantities_.size();
        } else {
          return quantitiesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .histogram.Quantities quantities = 5;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities getQuantities(int index) {
        if (quantitiesBuilder_ == null) {
          return quantities_.get(index);
        } else {
          return quantitiesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .histogram.Quantities quantities = 5;</code>
       */
      public Builder setQuantities(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities value) {
        if (quantitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQuantitiesIsMutable();
          quantities_.set(index, value);
          onChanged();
        } else {
          quantitiesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.Quantities quantities = 5;</code>
       */
      public Builder setQuantities(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities.Builder builderForValue) {
        if (quantitiesBuilder_ == null) {
          ensureQuantitiesIsMutable();
          quantities_.set(index, builderForValue.build());
          onChanged();
        } else {
          quantitiesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .histogram.Quantities quantities = 5;</code>
       */
      public Builder addQuantities(me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities value) {
        if (quantitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQuantitiesIsMutable();
          quantities_.add(value);
          onChanged();
        } else {
          quantitiesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.Quantities quantities = 5;</code>
       */
      public Builder addQuantities(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities value) {
        if (quantitiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQuantitiesIsMutable();
          quantities_.add(index, value);
          onChanged();
        } else {
          quantitiesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.Quantities quantities = 5;</code>
       */
      public Builder addQuantities(
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities.Builder builderForValue) {
        if (quantitiesBuilder_ == null) {
          ensureQuantitiesIsMutable();
          quantities_.add(builderForValue.build());
          onChanged();
        } else {
          quantitiesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .histogram.Quantities quantities = 5;</code>
       */
      public Builder addQuantities(
          int index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities.Builder builderForValue) {
        if (quantitiesBuilder_ == null) {
          ensureQuantitiesIsMutable();
          quantities_.add(index, builderForValue.build());
          onChanged();
        } else {
          quantitiesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .histogram.Quantities quantities = 5;</code>
       */
      public Builder addAllQuantities(
          java.lang.Iterable<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities> values) {
        if (quantitiesBuilder_ == null) {
          ensureQuantitiesIsMutable();
          super.addAll(values, quantities_);
          onChanged();
        } else {
          quantitiesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.Quantities quantities = 5;</code>
       */
      public Builder clearQuantities() {
        if (quantitiesBuilder_ == null) {
          quantities_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          quantitiesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .histogram.Quantities quantities = 5;</code>
       */
      public Builder removeQuantities(int index) {
        if (quantitiesBuilder_ == null) {
          ensureQuantitiesIsMutable();
          quantities_.remove(index);
          onChanged();
        } else {
          quantitiesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .histogram.Quantities quantities = 5;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities.Builder getQuantitiesBuilder(
          int index) {
        return getQuantitiesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .histogram.Quantities quantities = 5;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitiesOrBuilder getQuantitiesOrBuilder(
          int index) {
        if (quantitiesBuilder_ == null) {
          return quantities_.get(index);  } else {
          return quantitiesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .histogram.Quantities quantities = 5;</code>
       */
      public java.util.List<? extends me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitiesOrBuilder> 
           getQuantitiesOrBuilderList() {
        if (quantitiesBuilder_ != null) {
          return quantitiesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(quantities_);
        }
      }
      /**
       * <code>repeated .histogram.Quantities quantities = 5;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities.Builder addQuantitiesBuilder() {
        return getQuantitiesFieldBuilder().addBuilder(
            me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities.getDefaultInstance());
      }
      /**
       * <code>repeated .histogram.Quantities quantities = 5;</code>
       */
      public me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities.Builder addQuantitiesBuilder(
          int index) {
        return getQuantitiesFieldBuilder().addBuilder(
            index, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities.getDefaultInstance());
      }
      /**
       * <code>repeated .histogram.Quantities quantities = 5;</code>
       */
      public java.util.List<me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities.Builder> 
           getQuantitiesBuilderList() {
        return getQuantitiesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitiesOrBuilder> 
          getQuantitiesFieldBuilder() {
        if (quantitiesBuilder_ == null) {
          quantitiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.Quantities.Builder, me.bpulse.domain.proto.histogram.HistogramQuantitiesMessageRS.QuantitiesOrBuilder>(
                  quantities_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          quantities_ = null;
        }
        return quantitiesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:histogram.HistogramQuantitiesRS)
    }

    static {
      defaultInstance = new HistogramQuantitiesRS(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:histogram.HistogramQuantitiesRS)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_histogram_Interval_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_histogram_Interval_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_histogram_QuantitySecond_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_histogram_QuantitySecond_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_histogram_QuantityMinute_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_histogram_QuantityMinute_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_histogram_QuantityHour_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_histogram_QuantityHour_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_histogram_QuantityDay_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_histogram_QuantityDay_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_histogram_QuantityMonth_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_histogram_QuantityMonth_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_histogram_QuantityYear_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_histogram_QuantityYear_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_histogram_Quantities_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_histogram_Quantities_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_histogram_HistogramQuantitiesRS_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_histogram_HistogramQuantitiesRS_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"HistogramQuantitiesMessageRS.proto\022\thi" +
      "stogram\"#\n\010Interval\022\013\n\003gte\030\001 \002(\005\022\n\n\002lt\030\002" +
      " \002(\005\"3\n\016QuantitySecond\022\t\n\001s\030\001 \002(\005\022\t\n\001q\030\002" +
      " \002(\003\022\013\n\003PCT\030\003 \002(\002\"[\n\016QuantityMinute\022\n\n\002m" +
      "i\030\001 \002(\005\022\t\n\001q\030\002 \002(\003\022\013\n\003PCT\030\003 \002(\002\022%\n\002sc\030\004 " +
      "\003(\0132\031.histogram.QuantitySecond\"Y\n\014Quanti" +
      "tyHour\022\t\n\001h\030\001 \002(\005\022\t\n\001q\030\002 \002(\003\022\013\n\003PCT\030\003 \002(" +
      "\002\022&\n\003mts\030\004 \003(\0132\031.histogram.QuantityMinut" +
      "e\"U\n\013QuantityDay\022\t\n\001d\030\001 \002(\005\022\t\n\001q\030\002 \002(\003\022\013" +
      "\n\003PCT\030\003 \002(\002\022#\n\002hs\030\004 \003(\0132\027.histogram.Quan",
      "tityHour\"V\n\rQuantityMonth\022\t\n\001m\030\001 \002(\005\022\t\n\001" +
      "q\030\002 \002(\003\022\013\n\003PCT\030\003 \002(\002\022\"\n\002ds\030\004 \003(\0132\026.histo" +
      "gram.QuantityDay\"W\n\014QuantityYear\022\t\n\001y\030\001 " +
      "\002(\005\022\t\n\001q\030\002 \002(\003\022\013\n\003PCT\030\003 \002(\002\022$\n\002ms\030\004 \003(\0132" +
      "\030.histogram.QuantityMonth\"X\n\nQuantities\022" +
      "#\n\002ys\030\001 \003(\0132\027.histogram.QuantityYear\022%\n\010" +
      "interval\030\002 \002(\0132\023.histogram.Interval\"q\n\025H" +
      "istogramQuantitiesRS\022\n\n\002id\030\001 \002(\t\022\021\n\tshor" +
      "tName\030\002 \002(\t\022\016\n\006rsTime\030\003 \002(\003\022)\n\nquantitie" +
      "s\030\005 \003(\0132\025.histogram.QuantitiesB$\n me.bpu",
      "lse.domain.proto.histogramH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_histogram_Interval_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_histogram_Interval_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_histogram_Interval_descriptor,
              new java.lang.String[] { "Gte", "Lt", });
          internal_static_histogram_QuantitySecond_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_histogram_QuantitySecond_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_histogram_QuantitySecond_descriptor,
              new java.lang.String[] { "S", "Q", "PCT", });
          internal_static_histogram_QuantityMinute_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_histogram_QuantityMinute_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_histogram_QuantityMinute_descriptor,
              new java.lang.String[] { "Mi", "Q", "PCT", "Sc", });
          internal_static_histogram_QuantityHour_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_histogram_QuantityHour_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_histogram_QuantityHour_descriptor,
              new java.lang.String[] { "H", "Q", "PCT", "Mts", });
          internal_static_histogram_QuantityDay_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_histogram_QuantityDay_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_histogram_QuantityDay_descriptor,
              new java.lang.String[] { "D", "Q", "PCT", "Hs", });
          internal_static_histogram_QuantityMonth_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_histogram_QuantityMonth_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_histogram_QuantityMonth_descriptor,
              new java.lang.String[] { "M", "Q", "PCT", "Ds", });
          internal_static_histogram_QuantityYear_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_histogram_QuantityYear_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_histogram_QuantityYear_descriptor,
              new java.lang.String[] { "Y", "Q", "PCT", "Ms", });
          internal_static_histogram_Quantities_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_histogram_Quantities_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_histogram_Quantities_descriptor,
              new java.lang.String[] { "Ys", "Interval", });
          internal_static_histogram_HistogramQuantitiesRS_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_histogram_HistogramQuantitiesRS_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_histogram_HistogramQuantitiesRS_descriptor,
              new java.lang.String[] { "Id", "ShortName", "RsTime", "Quantities", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
